#!/bin/bash

echo "Making OAT Appraiser"

#tomcat configure 
TOMCAT_INSTALL_DIR=/usr/lib
TOMCAT_NAME=apache-tomcat-6.0.29
#CERT_DIR=/var/lib/oat-appraiser/Certificate
#CERT_DIR=${TEMP_DIR}
if [ -d /var/lib/oat-appraiser ]
then
	rm -rf /var/lib/oat-appraiser
	mkdir /var/lib/oat-appraiser
	mkdir /var/lib/oat-appraiser/CaCerts
	mkdir /var/lib/oat-appraiser/ClientFiles
else
	mkdir /var/lib/oat-appraiser
        mkdir /var/lib/oat-appraiser/CaCerts
        mkdir /var/lib/oat-appraiser/ClientFiles
fi

if [ -d /etc/oat-appraiser ]
then
        rm -rf /etc/oat-appraiser
        mkdir /etc/oat-appraiser
else
        mkdir /etc/oat-appraiser
fi

if [ $TOMCAT_DIR -a  -d $TOMCAT_DIR ];then
  if [[ ${TOMCAT_DIR:$((${#TOMCAT_DIR}-1)):1} == / ]];then
    TOMCAT_DIR_TMP=${TOMCAT_DIR:0:$((${#TOMCAT_DIR}-1))}
  else
    TOMCAT_DIR_TMP=$TOMCAT_DIR
  fi

  TOMCAT_INSTALL_DIR=${TOMCAT_DIR_TMP%/*}
  TOMCAT_NAME=${TOMCAT_DIR_TMP##*/}
fi
TOMCAT_DIR_COFNIG_TYPE=${TOMCAT_INSTALL_DIR//\//\\/}
echo $TOMCAT_INSTALL_DIR > ~/dpkg.log
echo $TOMCAT_DIR_COFNIG_TYPE >> ~/dpkg.log
update-rc.d tomcat6 defaults 99 1>>/dev/null
###Random generation /dev/urandom is good but just in case...
# Creating randoms for the p12 files and setting up truststore and keystore
ip12="internal.p12"
ipassfile="internal.pass"
idomfile="internal.domain"
name="OAT-Appraiser-Base"
iloc="/$name/"
p12file="$loc$ip12"
RAND1=$(dd if=/dev/urandom bs=1 count=1024)
RAND2=$(dd if=/dev/urandom bs=1 count=1024 | awk '{print $1}')
RAND3=$(dd if=/dev/urandom bs=1 count=1024 | awk '{print $1}')
randbits="$(echo "$( echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum )$( echo "`dd if=/dev/urandom bs=1 count=1024`" | md5sum | md5sum)$(echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum )$(echo "`dd if=/dev/urandom bs=1 count=1024 | awk '{print $1}'`" | md5sum | md5sum)$(echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum)$(echo "`dd if=/dev/urandom bs=1 count=1024 | awk '{print $1}'`" | md5sum | md5sum)$(echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum )" | md5sum | md5sum )"
randpass="${randbits:0:30}"
randbits2="$(echo "$( echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum )$( echo "`dd if=/dev/urandom bs=1 count=1024`" | md5sum | md5sum)$(echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum )$(echo "`dd if=/dev/urandom bs=1 count=1024 | awk '{print $1}'`" | md5sum | md5sum)$(echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum)$(echo "`dd if=/dev/urandom bs=1 count=1024 | awk '{print $1}'`" | md5sum | md5sum)$(echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum )" | md5sum | md5sum )"
randpass2="${randbits2:0:30}"
randbits3="$(echo "$( echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum )$( echo "`dd if=/dev/urandom bs=1 count=1024`" | md5sum | md5sum)$(echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum )$(echo "`dd if=/dev/urandom bs=1 count=1024 | awk '{print $1}'`" | md5sum | md5sum)$(echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum)$(echo "`dd if=/dev/urandom bs=1 count=1024 | awk '{print $1}'`" | md5sum | md5sum)$(echo "`date +%y%m%d%m%s%N`" | md5sum | md5sum )" | md5sum | md5sum )"
randpass3="${randbits3:0:30}"
p12pass="$randpass"
mysqlPass="$randpass2"
keystore="keystore.jks"
truststore="TrustStore.jks"
if [ "`ls $iloc | grep $ip12`" ] && [ "`ls $iloc | grep $ipassfile`" ] ; then
  p12pass="`cat $loc$ipassfile`"
fi
if [ "`ls $iloc | grep $idomfile`" ] ; then
  domain="`cat $loc$idomfile`"
fi


cp /${name}/tomcat6.deb /etc/init.d/tomcat6
#stop mysql and tomcat service
MYSQL=`netstat -nutlp | grep :3306 | grep mysql`
if [ "$MYSQL" ]; then
  service mysql stop
fi

TOMCAT=`netstat -nutlp | grep :8443 | grep java`
if [ "$TOMCAT" ]; then
  service tomcat6 stop
fi

sleep 10

#Configuring mysql so we can set up database and hisAppraiser profile
ISSKIPGRANTEXIT=`grep skip-grant-tables /etc/mysql/my.cnf`
if [ ! "$ISSKIPGRANTEXIT" ]; then 
  sed -i 's/\[mysqld\]/\[mysqld\]\nskip-grant-tables/g' /etc/mysql/my.cnf
fi
#start mysql service
if [ !  `netstat -nutlp | grep :3306 | grep mysql`  ]; then
  service mysql start
fi

#Sets up database and user
mysql -u root --execute="CREATE DATABASE oat_db; FLUSH PRIVILEGES; GRANT ALL ON oat_db.* TO 'oatAppraiser'@'localhost' IDENTIFIED BY '$randpass3';"

#stop mysql service
if [ "`netstat -nutlp | grep :3306 | grep mysql`" ]; then
  service mysql stop
fi


#setting up tomcat at $TOMCAT_INSTALL_DIR/
if [ $TOMCAT_NAME == apache-tomcat-6.0.29 ];then
rm -f $TOMCAT_INSTALL_DIR/apache-tomcat-6.0.29.tar.gz
mv /$name/apache-tomcat-6.0.29.tar.gz $TOMCAT_INSTALL_DIR/.
fi

unzip /$name/service.zip -d /$name/
rm -f /$name/service.zip

if [ $TOMCAT_NAME == apache-tomcat-6.0.29 ];then
  rm -rf $TOMCAT_INSTALL_DIR/$TOMCAT_NAME
  tar -zxf $TOMCAT_INSTALL_DIR/apache-tomcat-6.0.29.tar.gz -C $TOMCAT_INSTALL_DIR/
fi

rm -rf $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/service
mv -f /$name/service $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/service
#rm -rf $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/Certificate
rm -rf /var/lib/oat-appraiser/Certificate
#mkdir $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/Certificate
mkdir /var/lib/oat-appraiser/Certificate
unzip /$name/setupProperties.zip -d /$name/
mv /$name/setup.properties /etc/oat-appraiser/
rm -R -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/*

#TODO
#chkconfig --del NetworkManager
#chkconfig network on
#chkconfig httpd --add
#chkconfig httpd on
#service httpd start
#chkconfig mysql on
#service mysql start

#start mysql service
if [ ! `netstat -nutlp | grep :3306 | grep mysql` ]; then
  service mysql start
fi


#running OAT database full setup
if [ "`netstat -nutlp | grep :3306 | grep mysql`" ]; then
  service mysql stop
fi
sed -i 's/skip-grant-tables//g' /etc/mysql/my.cnf
if [ ! `netstat -nutlp | grep :3306 | grep mysql` ]; then
  service mysql start
fi
rm -rf /$name/MySQLdrop.txt
unzip /$name/MySQLdrop.zip -d /$name/
#ubuntu has different behavior on ' conduction comparing with fedora
sed -i "s/DROP USER ''/DROP USER 'oatAppraiser'@'localhost'/g" /$name/MySQLdrop.txt
mysql -u root < /$name/MySQLdrop.txt
rm -rf /$name/OAT_Server_Install
unzip /$name/OAT_Server_Install.zip -d /$name/
rm -rf /tmp/OAT_Server_Install
mv -f /$name/OAT_Server_Install /tmp/OAT_Server_Install
mysql -u root --execute="DROP DATABASE IF EXISTS oat_db;"
mysql -u root < /tmp/OAT_Server_Install/oat_db.MySQL
###################

mysql -u root < /tmp/OAT_Server_Install/init.sql
mysql -u root --execute="FLUSH PRIVILEGES; GRANT ALL ON oat_db.* TO 'oatAppraiser'@'localhost' IDENTIFIED BY '$randpass3';"
#setting up access control in tomcat context.xml
#sed -i "/<\/Context>/i\\   <Resource name=\"jdbc\/oat\" auth=\"Container\" type=\"javax.sql.DataSource\"\n    username=\"oatAppraiser\" password=\"$randpass3\" driverClassName=\"com.mysql.jdbc.Driver\"\n    url=\"jdbc:mysql:\/\/localhost:3306\/oat_db\"\/>" $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/conf/context.xml

sed -i "/<\/Context>/i\\   <Resource name=\"jdbc\/oat\" auth=\"Container\" type=\"com.mchange.v2.c3p0.ComboPooledDataSource\" user=\"oatAppraiser\" password=\"$randpass3\"\n  driverClass=\"com.mysql.jdbc.Driver\" factory=\"org.apache.naming.factory.BeanFactory\" maxIdleTime=\"300\" idleConnectionTestPeriod=\"150\" jdbcUrl=\"jdbc:mysql:\/\/localhost:3306\/oat_db\"\/>" $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/conf/context.xml

#setting up port 8443 in tomcat server.xml
#sed -i "s/ <\/Service>/<Connector port=\"8443\" minSpareThreads=\"5\" maxSpareThreads=\"75\" enableLookups=\"false\" disableUploadTimeout=\"true\" acceptCount=\"100\" maxThreads=\"200\" scheme=\"https\" secure=\"true\" SSLEnabled=\"true\" clientAuth=\"want\" sslProtocol=\"TLS\" ciphers=\"TLS_ECDH_anon_WITH_AES_256_CBC_SHA, TLS_ECDH_anon_WITH_AES_128_CBC_SHA, TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDH_RSA_WITH_AES_256_CBC_SHA, TLS_ECDH_RSA_WITH_AES_128_CBC_SHA, TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA\" keystoreFile=\"$TOMCAT_DIR_COFNIG_TYPE\/$TOMCAT_NAME\/Certificate\/keystore.jks\" keystorePass=\"$p12pass\" truststoreFile=\"$TOMCAT_DIR_COFNIG_TYPE\/$TOMCAT_NAME\/Certificate\/TrustStore.jks\" truststorePass=\"password\" \/><\/Service>/g" $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/conf/server.xml

sed -i "s/ <\/Service>/<Connector port=\"8443\" minSpareThreads=\"5\" maxSpareThreads=\"75\" enableLookups=\"false\" disableUploadTimeout=\"true\" acceptCount=\"100\" maxThreads=\"200\" scheme=\"https\" secure=\"true\" SSLEnabled=\"true\" clientAuth=\"want\" sslProtocol=\"TLS\" ciphers=\"TLS_ECDH_anon_WITH_AES_256_CBC_SHA, TLS_ECDH_anon_WITH_AES_128_CBC_SHA, TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA, TLS_ECDH_RSA_WITH_AES_256_CBC_SHA, TLS_ECDH_RSA_WITH_AES_128_CBC_SHA, TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA\" keystoreFile=\"\/var\/lib\/oat-appraiser\/Certificate\/keystore.jks\" keystorePass=\"$p12pass\" truststoreFile=\"\/var\/lib\/oat-appraiser\/Certificate\/TrustStore.jks\" truststorePass=\"password\" \/><\/Service>/g" $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/conf/server.xml

cp -R /tmp/OAT_Server_Install/HisWebServices $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/
#
#if [ -e $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/OpenAttestationAdminConsole.war ];then
#  rm -rf $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/OpenAttestationAdminConsole.war
#fi
#
#if [ -e $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/OpenAttestationManifestWebServices.war ];then
#  rm -rf $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/OpenAttestationManifestWebServices.war
#fi
#
#if [ -e $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/OpenAttestationWebServices.war ];then
#  rm -rf $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/OpenAttestationWebServices.war
#fi

unzip /tmp/OAT_Server_Install/WLMService.war -d /tmp/OAT_Server_Install/WLMService
unzip /tmp/OAT_Server_Install/AttestationService.war -d /tmp/OAT_Server_Install/AttestationService
cp -R /tmp/OAT_Server_Install/WLMService $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/
cp -R /tmp/OAT_Server_Install/AttestationService $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/
echo "$TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/OpenAttestationAdminConsole/WEB-INF/classes/manifest.properties has updated"

mv $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/AttestationService/WEB-INF/classes/OpenAttestationWebServices.properties /etc/oat-appraiser/OpenAttestationWebServices.properties
sed -i "s/<server.domain>/$(hostname)/g" /etc/oat-appraiser/OpenAttestationWebServices.properties
#sed -i "s/<server.domain>/$(hostname)/g" $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/OpenAttestationAdminConsole/WEB-INF/classes/manifest.properties
#configuring hibernateHis for OAT appraiser setup
cp /tmp/OAT_Server_Install/hibernateOat.cfg.xml /tmp/
cp /tmp/hibernateOat.cfg.xml $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisWebServices/WEB-INF/classes/
cp /tmp/OAT_Server_Install/OAT.properties /etc/oat-appraiser/ 
mv $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisWebServices/WEB-INF/classes/OpenAttestation.properties /etc/oat-appraiser/
sed -i "s/<server.domain>/$(hostname)/g" /etc/oat-appraiser/OpenAttestation.properties

#sed -i "s/^truststore_path.*$/truststore_path=$TOMCAT_DIR_COFNIG_TYPE\/$TOMCAT_NAME\/Certificate\/TrustStore.jks/g" $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/OpenAttestationAdminConsole/WEB-INF/classes/manifest.properties
sed -i "s/^truststore_path.*$/truststore_path=\/var\/lib\/oat-appraiser\/Certificate\/TrustStore.jks/g" /etc/oat-appraiser/OpenAttestation.properties

sed -i "s/^TrustStore.*$/TrustStore=\/var\/lib\/oat-appraiser\/Certificate\/TrustStore.jks/g"  /etc/oat-appraiser/OpenAttestation.properties

mkdir -p /var/log/oat_ir
#placing OAT web portal in correct folder to be seen by tomcat6

rm -rf /${name}/OAT
unzip /${name}/OAT.zip -d /${name}/
rm -rf /var/www/OAT
mv -f /${name}/OAT /var/www/OAT

#setting the user and password in the OAT appraiser that will be used to access the mysql database.
sed -i 's/user = "root"/user = "oatAppraiser"/g' /var/www/OAT/includes/dbconnect.php
sed -i "s/pass = \"newpwd\"/pass = \"$randpass3\"/g" /var/www/OAT/includes/dbconnect.php

#setting up OAT database to talk with the web portal correctly
rm -f /${name}/oatSetup.txt
unzip /${name}/oatSetup.zip -d /${name}/
mysql -u root --database=oat_db < /${name}/oatSetup.txt

#stop mysql service
if [ "`netstat -nutlp | grep :3306 | grep mysql`" ]; then
  service mysql stop
fi

#start mysql service
if [ !  `netstat -nutlp | grep :3306 | grep mysql`  ]; then
  service mysql start
fi

#this code sets up the certificate attached to this computers hostname
#cd $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/Certificate/

cd /var/lib/oat-appraiser/Certificate/
echo "127.0.0.1       `hostname`" >> /etc/hosts
if [ "`echo $p12pass | grep $randpass`" ] ; then
  openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout hostname.pem -out hostname.cer -subj "/C=US/O=U.S. Government/OU=DoD/CN=`hostname`"
  openssl pkcs12 -export -in hostname.cer -inkey hostname.pem -out $p12file -passout pass:$p12pass
fi

keytool -importkeystore -srckeystore $p12file -destkeystore $keystore -srcstoretype pkcs12 -srcstorepass $p12pass -deststoretype jks -deststorepass $p12pass -noprompt

myalias=`keytool -list -v -keystore $keystore -storepass $p12pass | grep -B2 'PrivateKeyEntry' | grep 'Alias name:'`

keytool -changealias -alias ${myalias#*:} -destalias tomcat -v -keystore $keystore -storepass $p12pass

rm -f $truststore
keytool -import -keystore $truststore -storepass password -file hostname.cer -noprompt

#sets up the tomcat6 service
chmod -R 755 $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/service/*
#cp /${name}/tomcat6 /etc/init.d/
#chkconfig tomcat6 --add
#chkconfig tomcat6 on


rm -rf $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2.war

# TOAT IS THE BEGINNING OF THE PCA PORTION
#rm -rf /%{name}/OAT_PrivacyCA_Install
#unzip /%{name}/OAT_PrivacyCA_Install.zip -d /%{name}/
#rm -rf /tmp/OAT_PrivacyCA_Install
#mv /%{name}/OAT_PrivacyCA_Install /tmp/OAT_PrivacyCA_Install

chmod 777 /tmp
sleep 10
#catalina.sh
sed -i "/^#CATALINA_BIN/d" /etc/init.d/tomcat6
sed -i "s/^CATALINA_BIN/#TOMCAT_DIR/g" /etc/init.d/tomcat6
sed -i "/^#TOMCAT_DIR/i\\TOMCAT_DIR=\'$TOMCAT_INSTALL_DIR/$TOMCAT_NAME\';" /etc/init.d/tomcat6

service tomcat6 start

# TOAT FOR LOOP IS NEEDED TO MAKE SURE THAT TOMCAT6 IS STARTED WELL BEFORE THE .WAR FILE IS MOVED
for((i = 1; i < 60; i++))
do

        rm -f ./serviceLog

        service tomcat6 status | grep "running" >> ./serviceLog

        if [ -s ./serviceLog ]; then

        echo tomcat6 has started!
#        rm -f ./serviceLog
        sleep 10
        break
        fi

        sleep 1

        echo If this file is present after install then starting tomcat6 timed-out >> serviceLog

done

#moves the war file to webapps folder to unpack it
rm -rf $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2.war
cp /${name}/HisPrivacyCAWebServices2.war $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/
#unzip $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2.war -d $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2
# This for loop makes the rpm wait until the .war file has unpacked before attempting to access the files that will be created
for((i = 1; i < 60; i++))
do

        rm -f ./warLog

        if [ -e /var/lib/oat-appraiser -a -e /var/lib/oat-appraiser/ClientFiles/OATprovisioner.properties ]; then


        echo the Privacy CA was unpacked!
        rm -f ./warLog
        sleep 5
        break
        fi

        sleep 5

        echo If this file is present after install then unpacking the Privacy CA war file timed-out >> warLog

done

#this is a script to re-run certificate creation using new p12 files after installation
rm -rf /${name}/clientInstallRefresh.sh
rm -rf /${name}/linuxClientInstallRefresh.sh
cur_dir=$(pwd)
unzip /${name}/clientInstallRefresh.zip -d /${name}/
unzip /${name}/linuxClientInstallRefresh.zip -d /${name}/
cd /${name}/
sed -i "s/\/usr\/lib\/apache-tomcat-6.0.29/$TOMCAT_DIR_COFNIG_TYPE\/$TOMCAT_NAME/g" clientInstallRefresh.sh
sed -i "s/\/usr\/lib\/apache-tomcat-6.0.29/$TOMCAT_DIR_COFNIG_TYPE\/$TOMCAT_NAME/g" linuxClientInstallRefresh.sh

rm -rf clientInstallRefresh.zip
rm -rf linuxClientInstallRefresh.zip

mv $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/lib /var/lib/oat-appraiser/ClientFiles/
mv $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/TPMModule.properties /var/lib/oat-appraiser/ClientFiles/
rm -rf $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/CaCerts
rm -rf $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/
zip -9 linuxClientInstallRefresh.zip linuxClientInstallRefresh.sh
zip -9 clientInstallRefresh.zip    clientInstallRefresh.sh
#test Q
cp -rf linuxClientInstallRefresh.zip /tmp
cd $cur_dir

rm -rf /${name}/installers
#unzip /%{name}/ClientInstall.zip -d /%{name}/
unzip /${name}/ClientInstallForLinux.zip -d /${name}/

sleep 5

# zky: similar from here
#rm -f /%{name}/ClientInstallOld.zip
#mv /%{name}/ClientInstall.zip /%{name}/ClientInstallOld.zip

#rm -rf /%{name}/ClientInstall
#mkdir /%{name}/ClientInstall

#This code grabs all of the needed files from the privacy CA folder and packages them into a Client Installation folder
#cp -r -f /%{name}/installers /%{name}/ClientInstall

#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/endorsement.p12 /%{name}/ClientInstall/installers/hisInstall/
#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/lib /%{name}/ClientInstall/installers/hisInstall/
#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/TPMModule.properties /%{name}/ClientInstall/installers/hisInstall/
#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/exe /%{name}/ClientInstall/installers/hisInstall/
#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/PrivacyCA.cer /%{name}/ClientInstall/installers/hisInstall/
#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/TrustStore.jks /%{name}/ClientInstall/installers/hisInstall/
#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/OATprovisioner.properties /%{name}/ClientInstall/installers/hisInstall/
##DWC added two following lines for Chris
#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/install.bat /%{name}/ClientInstall/installers/hisInstall/
#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/OAT.properties /%{name}/ClientInstall/installers/hisInstall/
#
##privacy.jar for windows
#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/lib/PrivacyCA.jar /%{name}/ClientInstall/installers/hisInstall/lib


#cd /%{name}/; zip -9 -r ClientInstall.zip ClientInstall


#places the client installation folder up for tomcat6 to display
#cp -f /%{name}/ClientInstall.zip /var/www/html/

#zky: for linux, do similar things
rm -f /${name}/ClientInstallForLinuxOld.zip
mv /${name}/ClientInstallForLinux.zip /${name}/ClientInstallForLinuxOld.zip

rm -rf /${name}/ClientInstallForLinux

cp -r -f /${name}/linuxOatInstall /${name}/ClientInstallForLinux

cp /OAT-Appraiser-Base/OAT_Standalone.jar /OAT-Appraiser-Base/ClientInstallForLinux/
cp -r /OAT-Appraiser-Base/lib  /OAT-Appraiser-Base/ClientInstallForLinux/


#cp -r -f $TOMCAT_INSTALL_DIR/$TOMCAT_NAME/webapps/HisPrivacyCAWebServices2/ClientFiles/endorsement.p12 /${name}/ClientInstallForLinux/
cp -r -f /var/lib/oat-appraiser/ClientFiles/PrivacyCA.cer /${name}/ClientInstallForLinux/
cp -r -f /var/lib/oat-appraiser/ClientFiles/TrustStore.jks /${name}/ClientInstallForLinux/
cp -r -f /var/lib/oat-appraiser/ClientFiles/OATprovisioner.properties /${name}/ClientInstallForLinux/
sed -i '/ClientPath/s/C:.*/\/OAT/' /${name}/ClientInstallForLinux/OATprovisioner.properties
#remove credential information here
sed -i '/TpmEndorsmentP12/d' /${name}/ClientInstallForLinux/OATprovisioner.properties
sed -i '/EndorsementP12Pass/d' /${name}/ClientInstallForLinux/OATprovisioner.properties
#end remove
cp -r -f /var/lib/oat-appraiser/ClientFiles/OAT.properties /${name}/ClientInstallForLinux/
sed -i 's/NIARL_TPM_Module\.exe/NIARL_TPM_Module/g' /${name}/ClientInstallForLinux/OAT.properties
sed -i 's/HIS07\.jpg/OAT07\.jpg/g' /${name}/ClientInstallForLinux/OAT.properties
cd /${name}/; zip -9 -r ClientInstallForLinux.zip ClientInstallForLinux

#Test
cp -f /${name}/ClientInstallForLinux.zip /tmp/
#


#places the client installation folder up for tomcat6 to display
cp -f /${name}/ClientInstallForLinux.zip /var/www/


#creates the web page that allows access for the download of the client files folder
echo "<html>" >> /var/www/ClientInstaller.html
echo "<body>" >> /var/www/ClientInstaller.html
#echo "<h1><a href=\"ClientInstall.zip\">Client Installation Files</a
#></h1>" >> /var/www/html/ClientInstaller.html
echo "<h1><a href=\"ClientInstallForLinux.zip\">Client Installation Files For Linux</a
></h1>" >> /var/www/ClientInstaller.html
echo "</body>" >> /var/www/ClientInstaller.html
echo "</html>" >> /var/www/ClientInstaller.html

chmod 755 /var/www/Client*


#closes some known security holes in tomcat6
#sed -i "s/AllowOverride None/AllowOverride All/" /etc/httpd/conf/httpd.conf
#echo "TraceEnable Off" >> /etc/httpd/conf/httpd.conf
sed -i "s/ServerTokens OS/ServerTokens Prod/" /etc/apache2/conf.d/security
sed -i "s/Options Indexes/Options/" /etc/apache2/sites-available/default
sed -i "s/Options Indexes/Options/" /etc/apache2/sites-available/default-ssl
sed -i "s/Options Indexes/Options/" /etc/apache2/mods-available/alias.conf
sed -i "s/Options Indexes/Options/" /etc/apache2/sites-enabled/000-default
/etc/init.d/apache2 restart
#sed -i "s/expose_php = On/expose_php = Off/" /etc/php.ini

#rm -f /etc/httpd/conf.d/welcome.conf
#echo "" >> /etc/httpd/conf.d/welcome.conf



#######################################################################
printf "done\n"
