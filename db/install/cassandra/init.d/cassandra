#!/bin/bash
#
# cassandra		Start up the cassandra server daemon
#
# chkconfig: 2345 55 25
# description: SSH is a protocol for secure remote shell access. \
#              This service starts up the OpenSSH server daemon.
#
# processname: cassandra
# pidfile: /var/run/cassandra.pid

### BEGIN INIT INFO
# Provides: cassandra
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start up the cassandra server daemon
# Description:       SSH is a protocol for secure remote shell access.
#		     This service starts up the OpenSSH server daemon.
### END INIT INFO

# source function library
. /etc/rc.d/init.d/functions

RETVAL=0
PROGDIR="/srv/cassandra/apache-cassandra-0.7.2"
PROG="cassandra"
CASSANDRA="cassandra"

runlevel=$(set -- $(runlevel); eval "echo \$$#" )


do_restart_sanity_check()
{
	$SSHD -t
	RETVAL=$?
	if [ $RETVAL -ne  0 ]; then
		failure $"Configuration file or keys are invalid"
		echo
	fi
}

start()
{
	echo -n $"Starting $PROG: "
	$PROGDIR/bin/$PROG -p /var/run/cassandra.pid &>/dev/null && success || failure
	RETVAL=$?
	echo
	return $RETVAL
}

stop()
{
	echo -n $"Stopping $prog: "
        if [ -n "`pidfileofproc $CASSANDRA`" ] ; then
            killproc $CASSANDRA
        else
            failure $"Stopping $prog"
        fi
        RETVAL=$?

	echo
}

restart() {
	stop
	start
}

force_reload() {
	restart
}

rh_status() {
	PIDPATH=`ps -e |grep java |awk '{print $1}'`
	for i in $PIDPATH; do
		CWDPATH=`cat /proc/$i/cmdline`
		if echo $CWDPATH | grep "cassandra" &>/dev/null; then
			echo "cassandra (pid $i) is running..."
			return 1
		fi
	done
	echo "cassandra is stopped"
	return 0
}

rh_status_q() {
	rh_status >/dev/null 2>&1
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	status)
		rh_status
		RETVAL=$?
		if [ $RETVAL -eq 3 ] ; then
			RETVAL=2
		fi
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|status}"
		RETVAL=2
esac
exit $RETVAL
